- name: Update pip & related tools
  pip:
    name:
      - pip==20.2.4
      - setuptools
      - wheel
      - attrs
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Remove jsonfield2
  pip:
    name:
      - jsonfield2
    state: absent
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 2
  delay: 5
  register: result
  until: result is success
  notify: reload supervisor

- name: Set openwisp2_python_packages
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages | default([]) }}"

- name: Set custom package list
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages + [item] }}"
  with_items:
    - "{{ openwisp2_controller_pip }}"
    - "{{ openwisp2_notifications_pip }}"
    - "{{ openwisp2_users_pip }}"
    - "{{ openwisp2_utils_pip }}"
    - "{{ openwisp2_django_x509_pip }}"
    - "{{ openwisp2_django_loci_pip }}"
    - "{{ openwisp2_netjsonconfig_pip }}"
  when: item is defined and item is string

- name: Add network_topology to custom package list if set and enabled
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages + [item] }}"
  with_items:
    - "{{ openwisp2_network_topology_pip }}"
  when: item is defined and item is string and openwisp2_network_topology

- name: Add openwisp_radius to custom package list if set and enabled
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages + [item] }}"
  with_items:
    - "{{ openwisp2_radius_pip }}"
  when: item is defined and item is string and openwisp2_radius

- name: Add firmware_upgrader to custom package list if set and enabled
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages + [item] }}"
  with_items:
    - "{{ openwisp2_firmware_upgrader_pip }}"
  when: item is defined and item is string and openwisp2_firmware_upgrader

- name: Install cryptography from pip
  pip:
    name: cryptography
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install openwisp2 controller and its dependencies
  pip:
    name:
      - "openwisp-controller~={{ openwisp2_controller_version }}"
      - channels_redis~=3.1.0
      - service_identity
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Pin channels_redis to 2.4 for redis 4 compatibility
  when: use_redis5 is defined and use_redis5.failed
  pip:
    name:
      - channels_redis~=2.4
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Install django-redis
  pip:
    name: "django-redis>=4.9.0"
    state: present
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install openwisp2 network topology and its dependencies
  when: openwisp2_network_topology
  pip:
    name: "openwisp-network-topology~={{ openwisp2_network_topology_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install openwisp firmware upgrader and its dependencies
  when: openwisp2_firmware_upgrader
  pip:
    name: "openwisp-firmware-upgrader~={{ openwisp2_firmware_upgrader_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install openwisp2_radius and its dependencies
  when: openwisp2_radius
  pip:
    name: "openwisp-radius~={{ openwisp2_radius_version }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install extra python packages
  pip:
    name: "{{ openwisp2_extra_python_packages }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor

- name: Install custom OpenWISP 2 Python packages
  when: openwisp2_python_packages|length > 0
  pip:
    name: "{{ openwisp2_python_packages }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
    extra_args: "--no-deps"
  notify: reload supervisor
  retries: 5
  delay: 10
  register: result
  until: result is success
  tags:
    - molecule-idempotence-notest

- name: Install static minification dependencies
  pip:
    name:
      - django-pipeline~=2.0.0
      - django-compress-staticfiles~=1.0.1b
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor

- name: Install uwsgi
  pip:
    name: uwsgi
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor

- name: Install gevent
  pip:
    name: gevent
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor

- name: Install psycopg2
  when: openwisp2_database.engine in ["django.db.backends.postgresql", "django.contrib.gis.db.backends.postgis"]
  pip:
    name: psycopg2
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor

- name: Install MySQL-python
  when: openwisp2_database.engine in ["django.db.backends.mysql", "django.contrib.gis.db.backends.mysql"]
  pip:
    name: MySQL-python
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor

- name: Install raven (sentry client)
  when: openwisp2_sentry.get('dsn')
  pip:
    name: raven
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: reload supervisor
